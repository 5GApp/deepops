# Configuration common to all hosts
# Define per-group or per-host values in the other configuration files

# dns-config
#dns_config_servers: [8.8.8.8]
#dns_config_search: [example.com]

# NIS configuration
#nis_domain: example.com
#nis_server: 10.0.0.1

# Kerberos configuration
#kerberos_client_realm_name: "example.com"
#kerberos_client_kdc_hostname: "kerberos"
#kerberos_client_admin_hostname: "kerberos"
#nfs_idmapd_domain: example.com

# AutoFS configuration
#autofs_mount: "/home"
#autofs_map: "auto.home_linux"

# Slurm job scheduler configuration
slurm_user_home: /local/slurm
slurm_manage_gpus: true
slurm_cluster_name: deepops
slurm_username: slurm
slurm_password: ReplaceWithASecurePasswordInTheVault
slurm_db_username: slurm
slurm_db_password: AlsoReplaceWithASecurePasswordInTheVault
#slurm_max_job_timelimit: INFINITE
#slurm_default_job_timelimit:
slurm_install_pyxis: yes
slurm_controller_host: "{{ groups['slurm-master'][0] }}"
slurm_compute_hosts: "{{ groups['slurm-node'] }}"

nfs_exports:
  - path: /export/shared
    options: "*(rw,sync,no_root_squash)"

nfs_mounts:
  - mountpoint: /mnt/shared
    server: '{{ groups["nfs-server"][0] }}'
    path: /export/shared
    options: async,vers=3

# Collectd
#collectd_network_server: "deepops-mgmt.example.com"
#collectd_network_port: "30300"
#collectd_python_module_path: "/usr/lib/collectd/dcgm"
#collectd_python_modules: []
#collectd_config_dir: "/etc/collectd/collectd.conf.d"
#with_dcgm_collectd: false

# Lmod modules
#lmod_modulepath: /shared/modules/all

# Extra software to install via software.yml playbook
#software_extra_packages:
#  - curl
#  - git
#  - rsync
#  - screen
#  - tmux
#  - vim
#  - wget
#  - build-essential
#  - linux-tools-generic
#  - "{{ 'linux-headers-' + ansible_kernel }}"

software_packages_to_install:
  - linux-headers-generic
  - linux-image-generic
  - linux-tools-generic

#software_remove_packages:
#  - popularity-contest

#_cluster_repo_key_url: 'TODO'
#_cluster_repo_key_id: 'TODO'
#_cluster_repo: 'deb TODO /'

#enroot_ubuntu_repo_key_url: "{{ _cluster_repo_key_url }}"
#enroot_ubuntu_repo_key_id: "{{ _cluster_repo_key_id }}"
#enroot_ubuntu_repo: "{{ _cluster_repo }}"

#fuse_ubuntu_repo_key_url: "{{ _cluster_repo_key_url }}"
#fuse_ubuntu_repo_key_id: "{{ _cluster_repo_key_id }}"
#fuse_ubuntu_repo: "{{ _cluster_repo }}"

#slurm_ubuntu_repo_key_url: "{{ _cluster_repo_key_url }}"
#slurm_ubuntu_repo_key_id: "{{ _cluster_repo_key_id }}"
#slurm_ubuntu_repo: "{{ _cluster_repo }}"

enroot_runtime_path: '/tmp/enroot-runtime-$(id -u)'
enroot_cache_path: '/tmp/enroot-cache-$(id -u)'
enroot_data_path: '/tmp/enroot-data-$(id -u)'

enroot_config: |
  ENROOT_CONFIG_PATH ${HOME}/.config/enroot
  ENROOT_SQUASH_OPTIONS -noI -noD -noF -noX -no-duplicates
  ENROOT_MOUNT_HOME y
  ENROOT_RESTRICT_DEV y
  ENROOT_RUNTIME_PATH {{ enroot_runtime_path }}
  ENROOT_CACHE_PATH {{ enroot_cache_path }}
  ENROOT_DATA_PATH {{ enroot_data_path }}

# create user `nvidia` with password `deepops` on all nodes
# run with user-password.yml playbook
#users:
#  - username: nvidia
#    name: nvidia
#    password: $6$IrxI27V4ogJFfgTV$RvNskQFvXZzE9AFsIokuXKwDAyqs9Jd03Trfi7DsHoCyllK79/zhAciZPENt4.2uRNMR0gE6.mRD/o9jP7WcZ.
#    groups: ['sudo']
#    uid: 10007
#    home: /home/nvidia
