---
- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
      - "{{ ansible_distribution|lower }}.yml"
      - "{{ ansible_os_family|lower }}.yml"
      paths:
      - ../vars
      skip: true
  tags:
    - always

- name: add epel repo
  yum_repository:
    name: epel
    description: EPEL YUM repo
    baseurl: "{{ epel_baseurl }}"
    gpgkey: "{{ epel_gpgkey }}"
  when: ansible_os_family == "RedHat"

- include: munge.yml

- include: build.yml
  tags: build

  #- name: install slurm (xenial)
  #  when: ansible_facts['distribution'] == 'Ubuntu' and ansible_facts['distribution_major_version'] == '16'
  #  apt:
  #    deb: "{{ slurm_pkg_url }}/{{ slurm_pkg_tag }}/{{ item }}"
  #  with_items:
  #    - "{{ slurm_xenial_deb }}"
  #  notify:
  #    - restart slurmd
  #    - restart slurmdbd
  #    - restart slurmctld
  #  register: install_slurm_xenial
  #
  #- name: install slurm (bionic)
  #  when: (ansible_facts['distribution'] == 'Ubuntu' and ansible_facts['distribution_major_version'] == '18')
  #  apt:
  #    deb: "{{ slurm_pkg_url }}/{{ slurm_pkg_tag }}/{{ item }}"
  #  with_items:
  #    - "{{ slurm_bionic_deb }}"
  #  notify:
  #    - restart slurmd
  #    - restart slurmdbd
  #    - restart slurmctld
  #  register: install_slurm_bionic
  #
  #- name: install slurm (RHEL/CentOS)
  #  yum:
  #    name: "{{ slurm_pkg_url }}/{{ slurm_pkg_tag }}/{{ item }}"
  #    state: present
  #  with_items:
  #    - "{{ slurm_rhel_rpm }}"
  #  notify:
  #    - restart slurmd
  #    - restart slurmdbd
  #    - restart slurmctld
  #  when: ansible_os_family == "RedHat"
  #  register: install_slurm_rhel
  #
  #- name: Check for supported OS
  #  fail:
  #    msg: OS not supported for slurm packaging
  #  when: (install_slurm_xenial is skipped) and (install_slurm_bionic is skipped) and (install_slurm_rhel is skipped)

- name: create slurm user home
  file:
   path: "{{ slurm_user_home }}"
   recurse: yes
   state: directory

- name: create slurm user
  user:
    name: slurm
    state: present
    system: yes
    home: "{{ slurm_user_home }}"
    uid: "{{ slurm_user_uid }}"

- include: controller.yml
  when: is_controller

- include: compute.yml
  when: is_compute

- include: shmfix.yml
  when: is_compute and slurm_fix_shm

# unplug the drain - sometimes nodes get stuck
# sudo scontrol update node=XXX state=idle
# where XXX are the nodes that have changed and are marked as *down*
