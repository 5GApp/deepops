- name: configure GPFS
  hosts: all
  become: true
  gather_facts: True
  vars:
    source_key: "{{ lookup('env', 'HOME') }}/.ssh/gpfs_rsa"
    source_pub_key: "{{ lookup('env', 'HOME') }}/.ssh/gpfs_rsa.pub"
    dest_key: /root/.ssh/id_rsa
    gpfs_host_suffix: "-hs"
    gpfs_net_domain: "example.com"
    gpfs_deb_path_1: /shared/gpfs/gpfs_debs
    gpfs_deb_path_2: /shared/gpfs/zimon_debs/ubuntu16
  tasks:
  - name: install ssh priv key
    copy:
      src: "{{ source_key }}"
      dest: "{{ dest_key }}"
      mode: 0600
      owner: root
      group: root
  - name: install ssh pub key
    authorized_key:
      user: root
      state: present
      key: "{{ lookup('file', source_pub_key) }}"
  - name: populate hosts file
    blockinfile:
      dest: /etc/hosts
      #block: |-
      #  {% for item in (groups['dgx-servers'] + groups['slurm-masters']|default([]))|unique -%}{{ hostvars[item]['ib_bond_addr'] }}{% if (item != hostvars[item]['ansible_hostname']) %} {{ hostvars[item]['ansible_hostname'] }}-{{ gpfs_host_suffix }} {{ hostvars[item]['ansible_hostname'] }}-{{ gpfs_host_suffix }}.{{ gpfs_net_domain }}{% endif %} {{ item }}-{{ gpfs_host_suffix }} {{ item }}-{{ gpfs_host_suffix }}.{{ gpfs_net_domain }}
      #  {% endfor %}
      block: |-
        {% for item in (groups['slurm-cluster']+groups['gpfs-cluster']|default([]))|unique -%}{{ hostvars[item]['ib_bond_addr'].split('/') | first }} {{ item }}{{ gpfs_host_suffix }} {{ item }}{{ gpfs_host_suffix }}.{{ gpfs_net_domain }}
        {% endfor %}
      state: present
      create: yes
      backup: yes
      marker: "# Ansible gpfs hosts {mark}"
  - name: install pre-reqs
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
      - iputils-arping
      - sqlite3
  - name: install gpfs packages part 1
    apt:
      deb: "{{ gpfs_deb_path_1 }}/{{ item }}"
    with_items:
      - gpfs.base_5.0.0-1_amd64.deb
      - gpfs.gpl_5.0.0-1_all.deb
      - gpfs.msg.en-us_5.0.0-1_all.deb
      - gpfs.gskit_8.0.50-79_amd64.deb
      - gpfs.license.dm_5.0.0-1_amd64.deb
      - gpfs.ext_5.0.0-1_amd64.deb
      - gpfs.compression_5.0.0-1_amd64.deb
      - gpfs.docs_5.0.0-1_all.deb
  - name: install gpfs packages part 2
    apt:
      deb: "{{ gpfs_deb_path_2 }}/{{ item }}"
    with_items:
      - gpfs.gss.pmcollector_5.0.0-1.U16.04_amd64.deb
      - gpfs.gss.pmsensors_5.0.0-1.U16.04_amd64.deb
  - name: check for gpfs kernel modules
    shell: bash -c "find /lib/modules/`uname -r`/extra/mmfslinux.ko"
    register: "gpfs_mod_installed"
    ignore_errors: True
    tags:
      rebuild_mod
  - name: build gpfs kernel modules if required
    shell: bash -c "/usr/lpp/mmfs/bin/mmbuildgpl"
    when: gpfs_mod_installed is failed
    tags:
      rebuild_mod
  - name: enable pmsensors
    systemd:
      name: pmsensors
      state: started
      enabled: yes
  roles:
  - network
